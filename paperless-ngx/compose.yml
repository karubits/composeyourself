# Docker Compose file for running paperless from the docker container registry.
# This file contains everything paperless needs to run.
# Paperless supports amd64, arm and arm64 hardware.
#
# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 8000.
#
# In addition to that, this Docker Compose file adds the following optional
# configurations:
#
# - Instead of SQLite (default), PostgreSQL is used as the database server.
# - Apache Tika and Gotenberg servers are started with paperless and paperless
#   is configured to use these services. These provide support for consuming
#   Office documents (Word, Excel, Power Point and their LibreOffice counter-
#   parts.
#
# To install and update paperless with this file, do the following:
#
# - Copy this file as 'docker-compose.yml' and the files 'docker-compose.env'
#   and '.env' into a folder.
# - Run 'docker compose pull'.
# - Run 'docker compose run --rm webserver createsuperuser' to create a user.
# - Run 'docker compose up -d'.
#
# For more extensive installation and update instructions, refer to the
# documentation.
---
version: "3.8"
services:
  paperless-broker:
    container_name: paperless-broker
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - redisdata:/data

  paperless-db:
    container_name: paperless-db
    image: docker.io/library/postgres:15
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: ${DB_PASS}

  paperless-webserver:
    container_name: paperless-webserver
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - paperless-db
      - paperless-broker
      - paperless-gotenberg
      - paperless-tika
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - data:/usr/src/paperless/data
      - /mnt/data/paperless/media:/usr/src/paperless/media
      - /mnt/data/paperless/export:/usr/src/paperless/export
      - /mnt/data/paperless/consume:/usr/src/paperless/consume
    env_file: .paperless.env
    environment:
      PAPERLESS_REDIS: redis://paperless-broker:6379
      PAPERLESS_DBHOST: paperless-db
      PAPERLESS_DBENGINE: postgres
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://paperless-tika:9998
    labels:
      # Homepage
      - "homepage.description=PaperlessNGX"
      - "homepage.group=Apps"
      - "homepage.href=https://paperless.${DEFAULT_DOMAIN}"
      - "homepage.icon=paperless.png"
      - "homepage.name=Paperless"
      - "homepage.weight=3"
      - "homepage.widget.type=paperlessngx"
      - "homepage.widget.url=https://paperless.${DEFAULT_DOMAIN}" 
      - "homepage.widget.key=${API_TOKEN_PAPERLESS}"
      # Traefik
      - "traefik.docker.network=proxy"
      - "traefik.enable=true"
      - "traefik.http.routers.paperless.entrypoints=websecure"
      - "traefik.http.routers.paperless.rule=Host(`paperless.${DEFAULT_DOMAIN}`)"
      - "traefik.http.routers.paperless.service=paperless"
      - "traefik.http.services.paperless.loadbalancer.server.port=8000"
    networks:
      - proxy
      - default

  paperless-gotenberg:
    container_name: paperless-gotenberg
    image: docker.io/gotenberg/gotenberg:7.10
    restart: unless-stopped

    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  paperless-tika:
    container_name: paperless-tika
    image: ghcr.io/paperless-ngx/tika:latest
    restart: unless-stopped

volumes:
  data:
  pgdata:
  redisdata:

networks:
  proxy:
    name: proxy
    external: true
